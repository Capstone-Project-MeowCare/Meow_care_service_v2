name: Docker Image CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: docker-image-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using credentials from GitHub Secrets
      - name: Log in to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

      # Step 3: Define Docker image tags
      - name: Set up Docker tags
        id: docker_tag
        run: |
          TAG_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          TAG_TIMESTAMP=$(date +%s)
          IMAGE_NAME="trongtk001/meow_care_service"
          echo "DOCKER_IMAGE_UNIQUE=${IMAGE_NAME}:${TAG_SHA}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_LATEST=${IMAGE_NAME}:latest" >> $GITHUB_ENV

      # Step 4: Build the Docker image with tags
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_UNIQUE }} -t ${{ env.DOCKER_IMAGE_LATEST }} .

      # Step 5: Push Docker images to Docker Hub
      - name: Push Docker Images
        run: |
          docker push ${{ env.DOCKER_IMAGE_UNIQUE }}
          docker push ${{ env.DOCKER_IMAGE_LATEST }}

      # Optional: Notify via Discord on Success
      - name: Notify Discord on Success
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "ðŸŽ‰ Docker image build and push successful! Image: `trongtk001/meow_care_service`"}' \
          $DISCORD_WEBHOOK
